name: Lint and Validation
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test-lug:
    runs-on: ubuntu-latest
    name: lug config format
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@1f095fee853b33114486cfdeae62fa099cda35a9 # v33
        with:
          nix_conf: |
            extra-substituters = https://sjtug.cachix.org
            extra-trusted-public-keys = sjtug.cachix.org-1:06k1I31gmbCDlu7StkdMgDt1yEf6qoRsyaUkMpkuPdE=
      - run: nix flake check
  test-docker-build:
    name: docker build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency:
      # Lint and Validation-test-docker-build-{siyuan,zhiyuan}
      group: ${{ github.workflow }}-test-docker-build-${{ matrix.mirror }}
      cancel-in-progress: true
    strategy:
      matrix:
        mirror: ["siyuan", "zhiyuan"]
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
          submodules: "recursive"
      - name: use CI config for docker-compose
        run: |
          cp docker-compose.ci.yml docker-compose.override.yml
          cp ./secrets/caddy.env.example ./secrets/caddy.env
          cp ./secrets/mirror-clone.env.example ./secrets/mirror-clone.env
          cp ./secrets/mirror-intel.env.example ./secrets/mirror-intel.env
          cp ./secrets/gcr-registry.ci.yml ./secrets/gcr-registry.yml
          cp ./secrets/docker-registry.ci.yml ./secrets/docker-registry.yml
          cp ./secrets/pg.env.example ./secrets/pg.env
          touch ./secrets/lug-secrets.sh
      - name: verify config
        run: docker compose -f docker-compose.yml -f docker-compose.${{ matrix.mirror }}.yml config
      - name: docker compose build
        run: docker compose -f docker-compose.yml -f docker-compose.${{ matrix.mirror }}.yml -f docker-compose.ci.yml build --parallel
      - name: validate Caddyfile
        run: make caddy-verify-config
  test-caddy-file:
    runs-on: ubuntu-latest
    name: Caddyfile up-to-date
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@1f095fee853b33114486cfdeae62fa099cda35a9 # v33
        with:
          nix_conf: |
            extra-substituters = https://sjtug.cachix.org
            extra-trusted-public-keys = sjtug.cachix.org-1:06k1I31gmbCDlu7StkdMgDt1yEf6qoRsyaUkMpkuPdE=
      - run: nix build .#pythonEnv-caddy-gen --out-link caddy-gen/.venv
      - name: check if Caddyfile is latest version
        run: make caddy-gen && git diff --exit-code
      - name: use CI config for docker-compose
        run: |
          cp docker-compose.ci.yml docker-compose.override.yml
          cp ./secrets/caddy.env.example ./secrets/caddy.env
          cp ./secrets/mirror-clone.env.example ./secrets/mirror-clone.env
          cp ./secrets/mirror-intel.env.example ./secrets/mirror-intel.env
          cp ./secrets/gcr-registry.ci.yml ./secrets/gcr-registry.yml
          cp ./secrets/docker-registry.ci.yml ./secrets/docker-registry.yml
          cp ./secrets/pg.env.example ./secrets/pg.env
          touch ./secrets/lug-secrets.sh
      - name: validate Caddyfile
        run: docker compose build caddy && make caddy-verify-config
  test-gateway-file:
    runs-on: ubuntu-latest
    name: rsync-gateway config up-to-date
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@1f095fee853b33114486cfdeae62fa099cda35a9 # v33
        with:
          nix_conf: |
            extra-substituters = https://sjtug.cachix.org
            extra-trusted-public-keys = sjtug.cachix.org-1:06k1I31gmbCDlu7StkdMgDt1yEf6qoRsyaUkMpkuPdE=
      - run: nix build .#pythonEnv-gateway-gen --out-link gateway-gen/.venv
      - name: check if rsync-gateway config.toml is latest version
        run: make gateway-gen && git diff --exit-code
